name: beanstalk-deploy-basic

#on:
#  workflow_dispatch:
#  push:
#    branches: [ main ]

jobs:
  build-gradle:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

        # 필요시 세팅
#      - name: Set Prod Yaml
#        uses: microsoft/variable-substitution@v1
#        with:
#          files: 해당 프로젝트 디렉터리/application-prod.yml
#        env:
#          spring.datasource.url: DB URL
#          spring.datasource.username: DB_USERNAME
#          spring.datasource.password: DB_PASSWORD

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Docker build
        run: |
          docker login -u 도커허브 유저네임 -p 도커허브 토큰
          docker build -t 이미지명 .
          docker tag admin 사용자명/이미지명:태그명
          docker push 사용자명/이미지명:태그명 

      # 배포 시 version_label에 현재 시간을 표기
      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      # Beanstalk Deploy 플러그인 사용
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: AWS_ACCESS_KEY_ID # IAM 키
          aws_secret_key: AWS_SECRET_ACCESS_KEY # IAM 비밀 키
          application_name: example # beanstalk application 이름
          environment_name: example-env # beanstalk application 환경 이름
          version_label: "github-action--${{ steps.format-time.outputs.replaced }}"
          region: ap-northeast-2
          deployment_package: Dockerrun.aws.json # 도커 포트 설정